cmdhistory=["(run-tests)" "(+ 2 2)" "(ns-publics)" "(ns-publics *ns*)" "*ns*" "(in-ns 'protoflex.test-parse)" "(ns-publics *ns*)" "*ns*" "(load-file \\"test/protoflex/test_parse.clj\\")" "(run-tests)" "*ns*" "(in-ns 'protoflex.test-parse)" "(run-tests)" "*ns*" "(in-ns 'user)" "*ns*" "(run-tests)" "*ns*" "(+ 2 2)" ";; Switching to protoflex.parse namespace" ";; Switching to protoflex.test_parse namespace" "(run-tests)" ";; Switching to protoflex.parse namespace" ";; Switching to protoflex.test_parse namespace" "(run-tests)" "(def fns (->fns (string \\"a\\") (string \\"b\\")))" "(parse (first fns) \\"a\\")" "(first fns)" "(def fns (->fns (string \\"a\\") (string \\"b\\")))" "(first fns)" "(def fns (->fns (string \\"a\\") (string \\"b\\")))" "(->fns '(string \\"a\\") '(string \\"b\\"))" "(parse (first *1) \\"a\\")" "(->fns (string \\"a\\") (string \\"b\\"))" ";; Switching to protoflex.test_parse namespace" "(run-tests)" ";; Switching to protoflex.examples.csv_parse namespace" "(parse csv \\"foo,bar\\\\nbaz,boo\\")" "(defn any-string* [sep] (any \#(any-string sep) \#(multi* (read-n 1))))" "(defn csv-1 [sep] (sep-by \#(any-string* sep) \#(chr sep)))" "(parse csv \\"foo,bar\\\\nbaz,boo\\")" "(.printStackTrace *e)" "(defn any-string* [sep] (any \#(any-string sep) (fn [] (multi* \#(read-n 1))))\\n  )" "(parse csv \\"foo,bar\\\\nbaz,boo\\")" "(defn any-string* [sep] (any \#(any-string sep) \#(regex \#\\".*\\")))" "(parse csv \\"foo,bar\\\\nbaz,boo\\")" ";; Switching to protoflex.examples.csv_parse namespace" "(defn any-string* [sep] (any  \#(regex \#\\".*\\")))" "(parse \#(any-string* \\",\\") \\"abc\\" )" "(parse \#(any-string* \\",\\") \\"\\" )" ";; Switching to protoflex.parse namespace" ";; Switching to protoflex.examples.csv_parse namespace" "(parse csv \\"foo,bar\\\\nbaz,boo\\\\n\\")" "(parse csv \\"foo,bar\\\\nbaz,boo\\")" ";; Switching to protoflex.parse namespace" "(parse csv \\"foo,bar\\\\nbaz,boo\\")" ";; Switching to protoflex.examples.csv_parse namespace" "(parse csv \\"foo,bar\\\\nbaz,boo\\")" "(parse csv \\"foo,bar\\\\nbaz,boo\\\\n\\")" ";; Switching to protoflex.examples.csv_parse namespace" "(parse csv \\"foo,bar\\\\nbaz,boo\\\\n\\")" ";; Switching to protoflex.parse namespace" ";; Switching to protoflex.examples.csv_parse namespace" "(parse csv \\"foo,bar\\\\nbaz,boo\\\\n\\")" "(parse csv \\"foo,bar\\\\nbaz,boo\\")" "(parse csv \#(read-to-re-or-eof \\"XXX\\") \\"foo,bar\\\\nbaz,boo\\")" "(parse \#(read-to-re-or-eof \\"XXX\\") \\"foo,bar\\\\nbaz,boo\\")" "(parse \#(read-to-re-or-eof \\"XXX\\") \\"foo,bar\\\\nbaz,XXXboo\\")" "(parse \#(read-to-re-or-eof \\"XXX\\") \\"foo,bar\\\\nbaz,XXXboo\\" \:eof false)" "(parse csv \\"foo,bar\\\\nbaz,boo\\")" "(parse csv \\"foo,bar\\\\nbaz,boo\\\\n\\")" ";; Switching to protoflex.parse namespace" ";; Switching to protoflex.examples.csv_parse namespace" "(parse csv \\"foo,bar\\\\nbaz,boo\\\\n\\")" "(parse csv \\"foo,bar\\\\nbaz,boo\\")" "(parse csv \\"foo,bar\\\\nbaz,boo\\\\n\\")"]
eclipse.preferences.version=1
